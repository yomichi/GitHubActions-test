name: deploy

on:
  workflow_run:
    workflows: "CI"
    types: completed
    branches:
      - main
      - develop
      - '*-autodoc'
    tags: '*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'auto rebuilding site')"
    steps:
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: main
        fetch-depth: 0

    - name: Checkout gh-pages
      uses: actions/checkout@v2
      with:
        ref: gh-pages
        path: gh-pages


    - name: Print slug/short variables
      run: |
        echo "Slug variables"
        echo " - ${{ env.GITHUB_REF_SLUG }}"    
        echo " - ${{ env.GITHUB_HEAD_REF_SLUG }}"
        echo " - ${{ env.GITHUB_BASE_REF_SLUG }}"
        echo " - ${{ env.GITHUB_REPOSITORY_SLUG }}"
        # output e.g. : master feat-new-feature v1.0.0 product-1.0.0-rc.2 new-awesome-product
        echo "Slug URL variables"
        echo " - ${{ env.GITHUB_REF_SLUG_URL }}"
        echo " - ${{ env.GITHUB_HEAD_REF_SLUG_URL }}"
        echo " - ${{ env.GITHUB_BASE_REF_SLUG_URL }}"
        echo " - ${{ env.GITHUB_REPOSITORY_SLUG_URL }}"
        # output e.g. : master feat-new-feature v1-0-0 product-1-0-0-rc-2 new-awesome-product
        echo "Short SHA variables"
        echo " - ${{ env.GITHUB_SHA_SHORT }}"
        # output e.g. : ffac537e


    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx sphinx-rtd-theme gitpython

    - name: Build
      run: |
        cd ${GITHUB_WORKSPACE}/main
        git tag
        tagname="${{ env.GITHUB_REF_SLUG }}"
        export tagname="${tagname%-autodoc}"
        for LANG in ja en; do
          cd ${GITHUB_WORKSPACE}/main/docs/${LANG}
          make html
        done

    - name: Deploy Configuration
      run: |
          mkdir ~/.ssh
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
          echo "${{ secrets.GHA_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

    - name: Push
      env:
        GIT_USER: "yomichi"
        GIT_EMAIL: "yomichi@tsg.jp"
      run: |
          cd ${GITHUB_WORKSPACE}
          tagname="${{ env.GITHUB_REF_SLUG }}"
          tagname=${tagname%-autodoc}
          echo $tagname
          rm -rf "gh-pages/man/${tagname}"
          mkdir -p "gh-pages/man/${tagname}"
          for LANG in ja en; do
            cp -r main/docs/${LANG}/_build/html "gh-pages/man/${tagname}/${LANG}"
          done
          cd gh-pages
          git config --local user.name "${GIT_USER}"
          git config --local user.email "${GIT_EMAIL}"
          git remote set-url origin git@github.com:${GITHUB_REPOSITORY}.git
          git add man
          ret=0
          git commit -m "Deploy docs via GitHub Actions" || ret=$?
          if [ $ret -eq 0 ]; then
            git push origin gh-pages
          else
            echo "Nothing to deploy"
          fi
